# ExcelTaImport


## App

Die App wird durch einen Doppelklick auf `ExcelTaImport.exe` gestartet. Falls die ensprechenden Dateien existieren, 
werden Datenbank und Excel-Datei vorausgewählt. Die Datenbank wird unter `C:\Program Files\SafeScan\TA\TADATA.FDB` 
gesucht, die Excel-Datei mit dem Namen `users.xlsx` im selben Ordner wie die App oder auf dem Desktop. Die App wird
wird mit grosser Wahrscheinlichkeit nicht auf 64 Bit Systemen funktionieren

Datenbank und Excel-Datei können auch manuell ausgewählt werden. Durch einen Klick auf `Import starten` wird der 
Import gestartet. Die App gibt nach dem Import Auskunft über Erfolg oder Misserfolg des Imports.


### Excel-Datei

Die zu importierende Datei muss dasselbe Format haben wie die bereitgestellte Datei `users_beispiel.xlsx`. Die 
Felder `Vorname`, `Nachname` und `Karte` müssen für jeden Benutzer ausgefüllt sein. Die Reihenfolge der Spalten 
muss beibehalten werden. Der Import liest die Benutzer beginnend bei der zweiten Zeile.


## Problemlösung

### App

Zeigt die Applikation beim Import einen Fehler an, sollte das Log im Verzeichnis `log` geprüft werden.

Der Quellcode der Applikation befindet sich auf [GitHub](https://github.com/sandrobraendli/ExcelTaImport). Zur 
Entwicklung werden [IntelliJ IDEA Community](https://www.jetbrains.com/idea/download/#section=windows) und 
[Java SE Development Kit 8](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) 
benötigt.

Beim Debugging in IDEA ist es wichtig, dass die VM option `-Djava.library.path=lib` in der Run Configuration 
gesetzt ist. Die Hauptklasse der Applikation ist `io.braendli.importer.ImportForm`.

Um eine neue Version der Applikation zu erzeugen, muss `gradlew.bat createExe` ausgeführt werden. Die Applikation 
wird dann unter `build\launch4j` erzeugt.


### Datenbank

* Doppelklick auf `Datenbankbrowser`
* Pfad zur Datenbank im Feld `URL` prüfen/anpassen
* Klick auf `OK`
* Die Datenbank kann nun untersucht werden
* `Autocommit` ist standardmässig deaktiviert, Änderungen müssen mittels `commit;` bestätigt werden